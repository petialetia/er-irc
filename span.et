
vec;
maybe;

export {

    type Span a = struct {
        data: *a,
        size: Int,
    };


    of *Vec(a) -> Span(a)
    fun make_span from_vec;


    of Span(a) -> Maybe(a)
    fun peek_first span;


    of *Span(a) -> ()
    fun eat_first span;

}

fun make_span from_vec = { .data = from_vec->data,
                           .size = from_vec->size, };

fun eat_first span = {
    span->data = span->data + 1;
    span->size = span->size - 1;
};

fun peek_first span = match span.size {
    | 0: .none
    | _: .some span.data[0]
    };

